mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "001", cohortGroup == "diabetes_subset", date == unique(date)[4], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "001", cohortGroup == "diabetes_subset", date == unique(date)[5], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "002", cohortGroup == "diabetes_subset", date == unique(date)[2], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "002", cohortGroup == "diabetes_subset", date == unique(date)[3], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "002", cohortGroup == "diabetes_subset", date == unique(date)[4], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "002", cohortGroup == "diabetes_subset", date == unique(date)[2], HR > 0, BR > 0) %>%
ggplot(aes(x=BR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "004", cohortGroup == "diabetes_subset", date == unique(date)[2], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "004", cohortGroup == "diabetes_subset", date == unique(date)[3], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "004", cohortGroup == "diabetes_subset", date == unique(date)[2], HR > 0, BR > 0) %>%
ggplot(aes(x=BR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "005", cohortGroup == "diabetes_subset", date == unique(date)[2], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "005", cohortGroup == "diabetes_subset", date == unique(date)[3], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "006", cohortGroup == "diabetes_subset", date == unique(date)[2], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "006", cohortGroup == "diabetes_subset", date == unique(date)[3], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "006", cohortGroup == "diabetes_subset", date == unique(date)[4], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "006", cohortGroup == "diabetes_subset", date == unique(date)[5], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "006", cohortGroup == "diabetes_subset", date == unique(date)[2], HR > 0, BR > 0) %>%
ggplot(aes(x=BR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "006", cohortGroup == "diabetes_subset", date == unique(date)[3], HR > 0, BR > 0) %>%
ggplot(aes(x=BR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "006", cohortGroup == "diabetes_subset", date == unique(date)[3], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
glucose_df %>%
filter(type == "cgm", participantID == "006", date == unique(date)[3]) %>%
mutate(time=stri_extract(as.character(time),regex="^(\\d{2})")) %>%
ggplot(aes(x=glucose, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Glucose [mmol/L]", low=colorPalette[1], high=colorPalette[5]) +
labs(x="Blood Glucose [mmol/L]", y="Hour") +
ggtitle('Participant 006 Hourly Dist of CGM Measurements, 2014-10-05') +
geom_vline(xintercept=11.1, linetype='dashed', color=colorPalette[5], size=0.6) +
annotate("text", x=11.1, y="06", label="High", color=colorPalette[5], hjust=-0.4) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "007", cohortGroup == "diabetes_subset", date == unique(date)[2], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "007", cohortGroup == "diabetes_subset", date == unique(date)[3], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "007", cohortGroup == "diabetes_subset", date == unique(date)[2], HR > 0, BR > 0) %>%
ggplot(aes(x=BR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
glucose_df %>%
filter(type == "cgm", participantID == "007", date == unique(date)[2]) %>%
mutate(time=stri_extract(as.character(time),regex="^(\\d{2})")) %>%
ggplot(aes(x=glucose, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Glucose [mmol/L]", low=colorPalette[1], high=colorPalette[5]) +
labs(x="Blood Glucose [mmol/L]", y="Hour") +
ggtitle('Participant 006 Hourly Dist of CGM Measurements, 2014-10-05') +
geom_vline(xintercept=11.1, linetype='dashed', color=colorPalette[5], size=0.6) +
annotate("text", x=11.1, y="06", label="High", color=colorPalette[5], hjust=-0.4) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "007", cohortGroup == "diabetes_subset", date == unique(date)[3], HR > 0, BR > 0) %>%
ggplot(aes(x=BR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
glucose_df %>%
filter(type == "cgm", participantID == "007", date == unique(date)[3]) %>%
mutate(time=stri_extract(as.character(time),regex="^(\\d{2})")) %>%
ggplot(aes(x=glucose, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Glucose [mmol/L]", low=colorPalette[1], high=colorPalette[5]) +
labs(x="Blood Glucose [mmol/L]", y="Hour") +
ggtitle('Participant 006 Hourly Dist of CGM Measurements, 2014-10-05') +
geom_vline(xintercept=11.1, linetype='dashed', color=colorPalette[5], size=0.6) +
annotate("text", x=11.1, y="06", label="High", color=colorPalette[5], hjust=-0.4) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "008", cohortGroup == "diabetes_subset", date == unique(date)[1], HR > 0, BR > 0) %>%
ggplot(aes(x=BR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "008", cohortGroup == "diabetes_subset", date == unique(date)[2], HR > 0, BR > 0) %>%
ggplot(aes(x=BR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "008", cohortGroup == "diabetes_subset", date == unique(date)[2], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "008", cohortGroup == "diabetes_subset", date == unique(date)[3], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "008", cohortGroup == "diabetes_subset", date == unique(date)[1], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "008", cohortGroup == "diabetes_subset", date == unique(date)[3], HR > 0, BR > 0) %>%
ggplot(aes(x=BR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
glucose_df %>%
filter(type == "cgm", participantID == "002", date == unique(date)[2]) %>%
mutate(time=stri_extract(as.character(time),regex="^(\\d{2})")) %>%
ggplot(aes(x=glucose, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Glucose [mmol/L]", low=colorPalette[1], high=colorPalette[5]) +
labs(x="Blood Glucose [mmol/L]", y="Hour") +
ggtitle('Participant 006 Hourly Dist of CGM Measurements, 2014-10-05') +
geom_vline(xintercept=11.1, linetype='dashed', color=colorPalette[5], size=0.6) +
annotate("text", x=11.1, y="06", label="High", color=colorPalette[5], hjust=-0.4) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "002", cohortGroup == "diabetes_subset", date == unique(date)[2], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "002", cohortGroup == "diabetes_subset", date == unique(date)[2], HR > 0, BR > 0) %>%
ggplot(aes(x=BR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
glucose_df %>%
filter(type == "cgm", participantID == "006", date == unique(date)[2]) %>%
mutate(time=stri_extract(as.character(time),regex="^(\\d{2})")) %>%
ggplot(aes(x=glucose, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Glucose [mmol/L]", low=colorPalette[1], high=colorPalette[5]) +
labs(x="Blood Glucose [mmol/L]", y="Hour") +
ggtitle('Participant 006 Hourly Dist of CGM Measurements, 2014-10-05') +
geom_vline(xintercept=11.1, linetype='dashed', color=colorPalette[5], size=0.6) +
annotate("text", x=11.1, y="06", label="High", color=colorPalette[5], hjust=-0.4) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "006", cohortGroup == "diabetes_subset", date == unique(date)[2], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "006", cohortGroup == "diabetes_subset", date == unique(date)[2], HR > 0, BR > 0) %>%
ggplot(aes(x=BR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
glucose_df %>%
filter(type == "cgm", participantID == "007", date == unique(date)[2]) %>%
mutate(time=stri_extract(as.character(time),regex="^(\\d{2})")) %>%
ggplot(aes(x=glucose, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Glucose [mmol/L]", low=colorPalette[1], high=colorPalette[5]) +
labs(x="Blood Glucose [mmol/L]", y="Hour") +
ggtitle('Participant 006 Hourly Dist of CGM Measurements, 2014-10-05') +
geom_vline(xintercept=11.1, linetype='dashed', color=colorPalette[5], size=0.6) +
annotate("text", x=11.1, y="06", label="High", color=colorPalette[5], hjust=-0.4) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "007", cohortGroup == "diabetes_subset", date == unique(date)[2], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "007", cohortGroup == "diabetes_subset", date == unique(date)[2], HR > 0, BR > 0) %>%
ggplot(aes(x=BR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
glucose_df %>%
filter(type == "cgm", participantID == "007", date == unique(date)[2]) %>%
mutate(time=stri_extract(as.character(time),regex="^(\\d{2})")) %>%
ggplot(aes(x=glucose, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Glucose [mmol/L]", low=colorPalette[1], high=colorPalette[5]) +
labs(x="Blood Glucose [mmol/L]", y="Hour") +
ggtitle('Participant 006 Hourly Dist of CGM Measurements, 2014-10-05') +
geom_vline(xintercept=11.1, linetype='dashed', color=colorPalette[5], size=0.6) +
annotate("text", x=11.1, y="06", label="High", color=colorPalette[5], hjust=-0.4) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
glucose_df %>%
filter(type == "cgm", participantID == "006", date == unique(date)[2]) %>%
mutate(time=stri_extract(as.character(time),regex="^(\\d{2})")) %>%
ggplot(aes(x=glucose, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Glucose [mmol/L]", low=colorPalette[1], high=colorPalette[5]) +
labs(x="Blood Glucose [mmol/L]", y="Hour") +
ggtitle('Participant 006 Hourly Dist of CGM Measurements, 2014-10-05') +
geom_vline(xintercept=11.1, linetype='dashed', color=colorPalette[5], size=0.6) +
annotate("text", x=11.1, y="06", label="High", color=colorPalette[5], hjust=-0.4) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "006", cohortGroup == "diabetes_subset", date == unique(date)[2], HR > 0, BR > 0) %>%
ggplot(aes(x=HR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
sensor_df %>%
select(HR, BR, Activity, participantID, cohortGroup, date, time) %>%
mutate(time = stri_extract(as.character(time), regex = "^(\\d{2})")) %>%
filter(participantID == "006", cohortGroup == "diabetes_subset", date == unique(date)[2], HR > 0, BR > 0) %>%
ggplot(aes(x=BR, y=time, fill=stat(x))) +
geom_density_ridges_gradient(scale=1.3, rel_min_height=0.01) +
scale_fill_continuous(name="Heart Rate", low=colorPalette[2], high=colorPalette[4]) +
labs(x="Heart Rate [bpm]", y="Hour") +
ggtitle("Participant 006 Hourly Dist of Heart Rate, 2014-10-04") +
theme_minimal()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown::serve_site()
blogdown::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown::new_post(title = "How to make this website")
options(blogdown.ext = ".Rmd", blogdown.author = "Sean D McAtee")
blogdown::new_post(title = "How to make this website")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown::hugo_version()
blogdown::update_hugo()
blogdown:::preview_site(startup = TRUE)
blogdown::stop_server()
blogdown:::preview_site(startup = TRUE)
blogdown::stop_server()
blogdown:::preview_site(startup = TRUE)
blogdown::hugo_version()
pi
dcauchy(-1:4)
rcauchy(1)
rcauchy(10)
data("PlantGrowth")
PlantGrowth %>% head()
library(magrittr)
PlantGrowth %>% head()
PlantGrowth %>% str()
lm(weight ~ group, data = PlantGrowth)
lm(weight ~ group, data = PlantGrowth) %>% summary()
summary(lm(weight ~ group, data = PlantGrowth))
predict.lm(lm(weight ~ group, data = PlantGrowth), newdata = list(group = 1))
predict.lm(lm(weight ~ group, data = PlantGrowth), newdata = 1)
predict.lm(lm(weight ~ group, data = PlantGrowth), newdata = list(1))
predict.lm(lm(weight ~ group, data = PlantGrowth), newdata = list(group = 1))
predict.lm(lm(weight ~ group, data = PlantGrowth), newdata = factor(group = 1))
predict.lm(lm(weight ~ group, data = PlantGrowth), newdata = PlantGrowth$group[1])
predict.lm(lm(weight ~ group, data = PlantGrowth), newdata = PlantGrowth$group[1])
PlantGrowth$group[1]
predict.lm(lm(weight ~ group, data = PlantGrowth), newdata = PlantGrowth$group[[1]])
predict.lm(lm(weight ~ group, data = PlantGrowth), newdata = list(group = "trt1"))
PlantGrowth$group["trt1"]
PlantGrowth$group == "trt1"
PlantGrowth$weight[PlantGrowth$group == "trt1"]
PlantGrowth$weight[PlantGrowth$group == "trt1"] %>% mean()
class(fivenum)
names(fivenum)
names(PlantGrowth)
attributes(PlantGrowth)
e.g. \``r` `fivenum()`\` ->becomes-> `fivenum()`
class(PlantGrowth)
dim(PlantGrowth)
str(PlantGrowth)
colnames(PlantGrowth)
blogdown::serve_site()
blogdown::serve_site()
